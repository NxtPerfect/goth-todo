package templates

import (
  "todo/app/web/types"
  "strconv"
  "time"
)

templ rawPage(title string, username string) {
  <!DOCTYPE html>
  <script src="https://cdn.tailwindcss.com"></script> <!-- tailwindcss -->
  <script src="https://unpkg.com/htmx.org@1.9.10"></script> <!-- htmx -->
  <script src="https://unpkg.com/htmx.org/dist/ext/response-targets.js"></script> <!-- htmx-response-target -->
  <html lang="en">

  <head>
    <title>{ title }</title>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
  </head>

  <body class="scroll-smooth">
  <nav class="grid grid-cols-2 gap-0.5 justify-items-center content-center p-2 px-4 dark:bg-emerald-200">
    <h1>Logo</h1>
    <div class="flex gap-4">
    <!-- If username wasn't set, we're a guest, show guest buttons -->
        <p class="text-sky-800 transition ease-in-out delay-100 hover:text-sky-500 hover:cursor-pointer" hx-target="body" hx-swap="outerHTML" hx-post="/">Home</p>
      if username == "" {
        <p class="text-sky-800 transition ease-in-out delay-100 hover:text-sky-500 hover:cursor-pointer" hx-target="body" hx-swap="outerHTML" hx-post="/login">Login</p>
        <p class="text-sky-800 transition ease-in-out delay-100 hover:text-sky-500 hover:cursor-pointer" hx-target="body" hx-swap="outerHTML" hx-post="/register">Register</p>
      } else {
        <p class="text-sky-800 transition ease-in-out delay-100 hover:text-sky-500 hover:cursor-pointer" hx-target="body" hx-swap="outerHTML" hx-post="/profile">{ username }</p>
        <p class="text-sky-800 transition ease-in-out delay-100 hover:text-sky-500 hover:cursor-pointer" hx-target="body" hx-swap="outerHTML" hx-confirm="Do you want to log out?" hx-post="/api/logout">Logout</p>
      }
        <a class="text-sky-800 transition ease-in-out delay-100 hover:text-sky-500" href="/tos">TOS</a>
    </div>
  </nav>
  <main class="flex flex-col gap-0.5 justify-center content-center items-center p-2 py-5 text-black bg-zinc-100 dark:bg-emerald-950 dark:text-white h-full" >
  { children... }
  </main>
  <footer class="bg-emerald-100 text-black dark:bg-sky-800 dark:text-white p-2 py-10">
    Copyright (c) 2024 Aurora. All Rights Reserved.
  </footer>
  </body>

  </html>
}

templ HomePage(username string, tasks []types.Task) {
  @rawPage("Home", username) {
    if username == "" {
      <h1>Welcome, guest!</h1>
      <h2><p hx-post="/login" hx-swap="outerHTML" hx-target="body">Log in</p> to add tasks</h2>
    } else {
      <h1 class="text-xl font-semibold">Welcome, {username}!</h1>
      <h2 class="text-lg">Here are your tasks for today:</h2>
      <div class="flex flex-row justify-between align-center max-w-4xl w-full">Total: { strconv.Itoa(len(tasks)) }
        <button hx-get="/add" hx-target="#tasks_list" hx-swap="beforebegin" class="dark:bg-indigo-600 rounded-lg px-2 transition ease-in-out delay-100 hover:bg-indigo-500 hover:cursor-pointer active:bg-indigo-700 max-h-8 h-full" type="button">Add new task</button>
      </div>
      if len(tasks) > 0 {
        <ul class="max-w-4xl w-full" id="tasks_list">
        for i, _ := range tasks {
          <li id={"task_" + strconv.Itoa(i)}>
            <form class="flex flex-row dark:border-indigo-600 border-solid border-2 p-2 rounded-lg">
              <div class="flex flex-col basis-3/4">
                <h3 class="text-lg">Title: {tasks[i].Title}</h3>
                <p class="font-light">Description: {tasks[i].Description}</p>
              </div>
              <div class="flex flex-row basis-1/4 justify-evenly items-center">
                <input class="dark:bg-indigo-600 rounded-lg hover:cursor-pointer" type="checkbox" name="complete" hx-post="/api/tasks/complete" />
                <input class="dark:bg-indigo-600 rounded-lg px-2 transition ease-in-out delay-100 hover:bg-indigo-500 hover:cursor-pointer active:bg-indigo-700 max-h-8 h-full" type="button" value="Remove" hx-post="/api/tasks/remove" />
                <input class="dark:bg-indigo-600 rounded-lg px-2 transition ease-in-out delay-100 hover:bg-indigo-500 hover:cursor-pointer active:bg-indigo-700 max-h-8 h-full" type="button" value="Edit" hx-post="/api/tasks/edit" />
              </div>
            </form>
          </li>
        }
        </ul>
      } else {
        <h3>No tasks for today!</h3>
      }
    }
  }
}

templ NotFoundPage() {
  @rawPage("Not Found", "") {
    <h1>Page not found</h1>
    <a href="/" title="Return home"/>
  }
}

templ LoginPage(errorMsg string) {
  @rawPage("Login", "") {
    <form class="flex flex-col gap-4" hx-post="/api/login" hx-target="body" hx-swap="outerHTML swap:0.1s" hx-ext="response-targets" hx-target-error="#error-msg" hx-target-4*="#error-msg">
      <label class="text-black dark:text-white text-black" for="email">Email</label>
      <input class="dark:bg-indigo-600 dark:text-white rounded-lg text-black px-2 py-1" type="email" name="email" placeholder="Your email address" required/>
      <label class="text-black dark:text-white text-black" for="password">Password</label>
      <input class="dark:bg-indigo-600 dark:text-white rounded-lg text-black px-2 py-1" type="password" name="password" placeholder="Your password" required/>
      <button class="dark:bg-indigo-600 dark:text-white rounded-lg text-black" type="submit">Login</button>
      <div id="error-msg" class="min-w-100 min-h-50 w-50 h-25 bg-red-500">Test</div>
    </form>
  }
}

templ RegisterPage() {
  @rawPage("Register", "") {
    <form class="flex flex-col" hx-post="/api/register" hx-swap="outerHTML" hx-target="body">
      <label class="text-black dark:text-white" for="username">Username</label>
      <input class="dark:bg-indigo-600 text-white" type="text" name="username" placeholder="username" required/>
      <label class="text-black dark:text-white" for="email">Email</label>
      <input class="dark:bg-indigo-600 text-white" type="email" name="email" placeholder="email" required/>
      <label class="text-black dark:text-white" for="password">Password</label>
      <input class="dark:bg-indigo-600 text-white" type="password" name="password" placeholder="password" required/>
      <label class="text-black dark:text-white" for="password">Confirm Password</label>
      <input class="dark:bg-indigo-600 text-white" type="password" name="confirm_password" placeholder="confirm password" required/>
      <div class="flex flex-row">
        <label class="text-black dark:text-white" for="accept_tos">I agree to the <a href="/tos">Terms and Conditions</a></label>
        <input class="dark:bg-indigo-600 text-white" type="checkbox" name="accept_tos" required/>
      </div>
      <button type="submit">
        <svg class="animate-spin h-5 w-5 mr-3 opacity-0" viewBox="0 0 24 24"/>
        Register
      </button>
    </form>
  }
}

templ TosPage() {
  @rawPage("Terms of Service", "") {
    <p>we just huge gaming in this gamer game</p>
  }
}

templ errorComponent(errorMsg string) {
  if (errorMsg != "") {
    <div class="text-red m-4">{errorMsg}</div>
  }
}

templ AddForm() {
  <form class="flex flex-row gap-2 justify-center items-center max-w-4xl w-full max-h-4 h-full my-4" hx-post="/api/add" hx-target="#tasks_list" hx-swap="beforeend">
    <label class="min-w-fit" for="title">Title:</label>
    <input class="dark:text-white dark:bg-sky-800 min-w-0 rounded-lg py-2 px-2 max-h-6" type="text" name="title" placeholder="Title"/>
    <label class="min-w-fit" for="description">Description:</label>
    <input class="dark:text-white dark:bg-sky-800 min-w-0 rounded-lg py-2 px-2 max-h-6" type="text" name="description" placeholder="Description"/>
    <label class="min-w-fit" for="date_due">Date due:</label>
    <input class="dark:text-white dark:bg-sky-800 hover:cursor-pointer min-w-fit py-2 px-2 max-h-6 rounded-lg text-center align-middle" type="date" min={time.Now().Format("2006-01-02")} value={time.Now().Format("2006-01-02")} name="date_due"/>
    <button class="dark:bg-indigo-600 rounded-lg px-2 transition ease-in-out delay-100 hover:bg-indigo-500 hover:cursor-pointer active:bg-indigo-700 max-h-8 h-full max-w-14 w-full" type="submit" >Add</button>
  </form>
}
